version: "3.8"

services:

  db:
    image: postgres
    container_name: tg_db
    restart: unless-stopped
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - project3

  redis:
    image: redis:alpine
    container_name: tg_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis_data:/data
    networks:
      - project3

  flask_app:
    build:
      context: .
      dockerfile: Dockerfile_app
    container_name: instream_back
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - 8087
    depends_on:
      - db
      - redis
      - tg_app
    networks:
      - project3

  tg_app:
    build:
      context: .
      dockerfile: Dockerfile_tg
    container_name: tg_app
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - project3


networks:
  project3:
